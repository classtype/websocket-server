//--------------------------------------------------------------------------------------------------

$.Socket = $.extend(
    
/*--------------------------------------------------------------------------------------------------
|
| -> Свойства
|
|-------------------------------------------------------------------------------------------------*/

    {public: {isConsole: 'body'}},// Консоль
    {private: {events: {}}},// Список событий
    
/*--------------------------------------------------------------------------------------------------
|
| -> Создает сервер
|
|-------------------------------------------------------------------------------------------------*/

    {public: {create: function(p) {
    // Создаем сервер
        (new (require('ws').Server)({
        // Адрес сервера
            host: p.host[0],
            
        // Порт сервера
            port: p.host[1]
        })).on('connection', function(ws) {
        // Создаем новое соединение
            $.SocketConnect.create(ws, p.onAccess);
        });
        
    /* Консоль
     * -> all = все запросы
     * -> body = только тело запросов
    **/
        $.Socket.isConsole = p.console || 'body';
        
    // Записываем в консоль
        $.SocketConsole.create('Start listening on port ' + p.host[1] + '...');
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Добавляет новый обработчик
|
|-------------------------------------------------------------------------------------------------*/

    {public: {on: function(event, callback) {
    // Создаем новое событие
        if (!this.events[event]) {
            this.events[event] = [];
        }
        
    // Добавляем новый обработчик
        this.events[event][this.events[event].length] = callback;
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Запускает обработчик события
|
|-------------------------------------------------------------------------------------------------*/

    {public: {emit: function(event, connect, args) {
    // Проверяем наличие события
        if (this.events[event]) {
        // Проходим по списку обработчиков события
            for (var i = 0; i < this.events[event].length; i++) {
            // Запускаем обработчик
                this.events[event][i].apply(connect, args);
            }
        }
    }}}
);

//--------------------------------------------------------------------------------------------------